---
import Modal from './Modal.astro';
import FormattedDate from './FormattedDate.astro';
import { getEntry, render } from 'astro:content';


interface Props {
    customCss: String;
}
const { customCss } = Astro.props;

//const privacy = await getEntry('blog', 'privacy');

// Extract the frontmatter pubDate from the entryâ€™s data
//const { pubDate } = privacy.data;

//const { Content } = await render(privacy);
---
<footer>
    <div class={`flex flex-row${customCss}`}>
        <i class="text-link ri-user-voice-line ri-md"></i>
        <span class="text-subText text-sm pl-[0.375rem] text-justify font-sans">
            Feedback, suggestions, or wanna get in touch? <span class="border-b-2 border-dashed border-subText text-subText font-bold"><a href="mailto:rpartha1@pm.me">I'd love to hear about it</a></span>.
            <a href="#"><i class="text-link ri-arrow-up-line md:ri-lg max-sm:ri-xs"></i></a>
        </span>
    </div>
    <div class={`mt-1 flex flex-row${customCss}`}>
        <i class="text-link ri-copyright-line ri-md ml-[-0.08rem]"></i>
        <span class="text-subText text-sm pl-[0.375rem] text-justify font-sans whitespace-nowrap">
        <span id="current-year"></span> RAMASESHAN PARTHASARATHY
        </span>
    </div>
    <div class={`mt-1 flex flex-row${customCss}`}>
        <i class="text-link ri-lock-2-line ri-md ml-[-0.08rem]"></i>
        <span class="text-subText text-sm pl-[0.375rem] text-justify font-sans">
            Read about our <span class="border-b-2 border-dashed border-subText text-subText font-bold"><a id = "openModalLink" href="#">privacy statement</a></span>.
        </span>
    </div>

    <Modal id="privacyModal">
        <Fragment slot="header">
            <h2 class="text-xl font-serif text-link">Privacy Statement</h2>
        </Fragment>

        <Fragment slot="content">
            <div class="space-y-4">
                <!--<span class="font-sans font-bold text-md lu">Last Updated: <FormattedDate date={pubDate} iso={false}/></span>
                <Content pubDate={pubDate}/>-->
            </div>
        </Fragment>

        <Fragment slot="footer">
            <div class="p-4 bg-gray-50 rounded-b-lg flex justify-end">
                <button
                    id="acceptPrivacy"
                    class="px-4 py-2 bg-agree text-starIcon font-bold rounded-md"
                >
                    <i class="ri-checkbox-circle-line"></i> ACCEPT
                </button>
            </div>
        </Fragment>
    </Modal>
</footer>

<script>
  // Get DOM elements
  const modal = document.getElementById('privacyModal') as HTMLDialogElement;
  const openModalLink = document.getElementById('openModalLink');
  const acceptButton = document.getElementById('acceptPrivacy');

  if (modal && openModalLink && acceptButton) {
    // Open modal handler
    const openModal = () => {
      modal.showModal();
      document.body.style.overflow = 'hidden';
    };

    // Close modal handler
    const closeModal = () => {
      modal.close();
      document.body.style.overflow = '';
    };

    // Event listeners
    openModalLink.addEventListener('click', (e) => {
      e.preventDefault();
      openModal();
    });

    // Accept button click handler
    acceptButton.addEventListener('click', () => {
      closeModal();
    });

    // Close on overlay click
    modal.addEventListener('click', (e) => {
      const dialogDimensions = modal.getBoundingClientRect();
      if (
        e.clientX < dialogDimensions.left ||
        e.clientX > dialogDimensions.right ||
        e.clientY < dialogDimensions.top ||
        e.clientY > dialogDimensions.bottom
      ) {
        closeModal();
      }
    });
  }

  // Set current year
  const currentYearElement = document.getElementById('current-year');
  if (currentYearElement) {
    currentYearElement.textContent = new Date().getFullYear().toString();
  }
</script>
